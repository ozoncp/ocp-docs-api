// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ocp-docs-api/internal/repo (interfaces: Repo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	document "github.com/ocp-docs-api/internal/models/document"
)

// MockRepo is a mock of Repo interface.
type MockRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRepoMockRecorder
}

// MockRepoMockRecorder is the mock recorder for MockRepo.
type MockRepoMockRecorder struct {
	mock *MockRepo
}

// NewMockRepo creates a new mock instance.
func NewMockRepo(ctrl *gomock.Controller) *MockRepo {
	mock := &MockRepo{ctrl: ctrl}
	mock.recorder = &MockRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepo) EXPECT() *MockRepoMockRecorder {
	return m.recorder
}

// AddDoc mocks base method.
func (m *MockRepo) AddDoc(arg0 context.Context, arg1 document.Document) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddDoc", arg0, arg1)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddDoc indicates an expected call of AddDoc.
func (mr *MockRepoMockRecorder) AddDoc(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddDoc", reflect.TypeOf((*MockRepo)(nil).AddDoc), arg0, arg1)
}

// AddDocs mocks base method.
func (m *MockRepo) AddDocs(arg0 context.Context, arg1 []document.Document) ([]uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddDocs", arg0, arg1)
	ret0, _ := ret[0].([]uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddDocs indicates an expected call of AddDocs.
func (mr *MockRepoMockRecorder) AddDocs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddDocs", reflect.TypeOf((*MockRepo)(nil).AddDocs), arg0, arg1)
}

// DescribeDoc mocks base method.
func (m *MockRepo) DescribeDoc(arg0 context.Context, arg1 uint64) (*document.Document, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDoc", arg0, arg1)
	ret0, _ := ret[0].(*document.Document)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDoc indicates an expected call of DescribeDoc.
func (mr *MockRepoMockRecorder) DescribeDoc(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDoc", reflect.TypeOf((*MockRepo)(nil).DescribeDoc), arg0, arg1)
}

// ListDocs mocks base method.
func (m *MockRepo) ListDocs(arg0 context.Context, arg1, arg2 uint64) ([]document.Document, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDocs", arg0, arg1, arg2)
	ret0, _ := ret[0].([]document.Document)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDocs indicates an expected call of ListDocs.
func (mr *MockRepoMockRecorder) ListDocs(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDocs", reflect.TypeOf((*MockRepo)(nil).ListDocs), arg0, arg1, arg2)
}

// RemoveDoc mocks base method.
func (m *MockRepo) RemoveDoc(arg0 context.Context, arg1 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveDoc", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveDoc indicates an expected call of RemoveDoc.
func (mr *MockRepoMockRecorder) RemoveDoc(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveDoc", reflect.TypeOf((*MockRepo)(nil).RemoveDoc), arg0, arg1)
}

// UpdateDoc mocks base method.
func (m *MockRepo) UpdateDoc(arg0 context.Context, arg1 document.Document) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDoc", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateDoc indicates an expected call of UpdateDoc.
func (mr *MockRepoMockRecorder) UpdateDoc(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDoc", reflect.TypeOf((*MockRepo)(nil).UpdateDoc), arg0, arg1)
}
