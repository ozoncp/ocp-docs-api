syntax = "proto3";

import "google/api/annotations.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

package ocp.docs.api;

option go_package = "github.com/ozoncp/ocp-docs-api/pkg/ocp-docs-api;ocp_docs_api";

// Описание документа

service OcpDocsApi {

    // List docs
    rpc ListDocsV1(ListDocsV1Request) returns (ListDocsV1Response) {
        option (google.api.http) = {
            get: "/v1/docs"
        };
    }

    // Describe doc
    rpc DescribeDocV1(DescribeDocV1Request) returns (DescribeDocV1Response) {
        option (google.api.http) = {
            get: "/v1/docs/{id}"
        };
    }

    // Create doc
    rpc CreateDocV1(CreateDocV1Request) returns (CreateDocV1Response) {
        option (google.api.http) = {
            post: "/v1/docs"
        };
    }

    // Remove doc
    rpc RemoveDocV1(RemoveDocV1Request) returns (RemoveDocV1Response) {
        option (google.api.http) = {
            delete: "/v1/docs/{id}"
        };
    }

    // Update doc
    rpc UpdateDocV1(UpdateDocV1Request) returns (UpdateDocV1Response) {
        option (google.api.http) = {
            post: "/v1/doc"
        };
    }

    // Multi create docs
    rpc MultiCreateDocsV1(MultiCreateDocsV1Request) returns (MultiCreateDocsV1Response) {
        option (google.api.http) = {
            post: "/v1/docs"
        };
    }
}



message ListDocsV1Request {
    uint64 limit = 1;
    uint64 offset = 2;
}

message ListDocsV1Response {
    repeated Doc docs = 1;
}

message DescribeDocV1Request {
		uint64 id = 1 [(validate.rules).uint64.gt = 0];;
}

message DescribeDocV1Response {
    Doc doc = 1;
}

message CreateDocV1Request {
    string name = 1;
    string link = 2;
    string sourceLink = 3;
}

message CreateDocV1Response {
    uint64 id = 1;
}

message RemoveDocV1Request {
    uint64 id = 1 [(validate.rules).uint64.gt = 0];;
}

message RemoveDocV1Response {
    bool found = 1;
}

message UpdateDocV1Request {
    Doc doc = 1;
}

message UpdateDocV1Response {
    bool found = 1;
}

message MultiCreateDocsV1Request {
    repeated Doc docs = 1;
}

message MultiCreateDocsV1Response {
    uint64 docs_added = 1;
}

message Doc {
    uint64 id = 1;
    string name = 2;
    string link = 3;
    string sourceLink = 4;
}